{
  "manifest": {
    "name": "md5-file",
    "main": "index.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/roryrjb/md5-file.git"
    },
    "files": [
      "cli.js",
      "index.js",
      "promise.js"
    ],
    "version": "4.0.0",
    "description": "return an md5sum of a given file",
    "keywords": [
      "md5",
      "md5sum",
      "checksum"
    ],
    "author": {
      "name": "Rory Bradford",
      "email": "rory@dysfunctionalprogramming.com"
    },
    "license": "MIT",
    "scripts": {
      "test": "standard && mocha"
    },
    "bin": {
      "md5-file": "cli.js"
    },
    "devDependencies": {
      "mocha": "^5.0.5",
      "standard": "^11.0.1"
    },
    "engines": {
      "node": ">=6.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-md5-file-4.0.0-f3f7ba1e2dd1144d5bf1de698d0e5f44a4409584-integrity/node_modules/md5-file/package.json",
    "readmeFilename": "README.md",
    "readme": "# md5-file [![Build Status](https://travis-ci.org/roryrjb/md5-file.svg?branch=master)](https://travis-ci.org/roryrjb/md5-file) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\nGet the MD5-sum of a given file, with low memory usage, even on huge files.\n\n## Installation\n\n```sh\nnpm install --save md5-file\n```\n\n## Usage\n\n### As a module\n```js\nconst md5File = require('md5-file')\n\n/* Async usage */\nmd5File('LICENSE.md', (err, hash) => {\n  if (err) throw err\n\n  console.log(`The MD5 sum of LICENSE.md is: ${hash}`)\n})\n\n/* Sync usage */\nconst hash = md5File.sync('LICENSE.md')\nconsole.log(`The MD5 sum of LICENSE.md is: ${hash}`)\n```\n\n### As a command line tool\n```\n$ md5-file LICENSE.md\n```\n\n## Promise support\n\nIf you require `md5-file/promise` you'll receive an alternative API where all\nfunctions that takes callbacks are replaced by `Promise`-returning functions.\n\n```js\nconst md5File = require('md5-file/promise')\n\nmd5File('LICENSE.md').then(hash => {\n  console.log(`The MD5 sum of LICENSE.md is: ${hash}`)\n})\n```\n\n## API\n\n### `md5File(filepath: string, cb: function)`\n\nAsynchronously get the MD5-sum of the file at `filepath`.\n\nThe callback `cb` will be called with `(err: Error, hash: string)`.\n\n### `md5File.sync(filepath: string) => string`\n\nSynchronously get the MD5-sum of the file at `filepath`.\n\n### License\n\nMIT\n",
    "licenseText": "# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2015 - 2017 Rory Bradford and contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/md5-file/-/md5-file-4.0.0.tgz#f3f7ba1e2dd1144d5bf1de698d0e5f44a4409584",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/md5-file/-/md5-file-4.0.0.tgz",
    "hash": "f3f7ba1e2dd1144d5bf1de698d0e5f44a4409584",
    "integrity": "sha512-UC0qFwyAjn4YdPpKaDNw6gNxRf7Mcx7jC1UGCY4boCzgvU2Aoc1mOGzTtrjjLKhM5ivsnhoKpQVxKPp+1j1qwg==",
    "registry": "npm",
    "packageName": "md5-file",
    "cacheIntegrity": "sha512-UC0qFwyAjn4YdPpKaDNw6gNxRf7Mcx7jC1UGCY4boCzgvU2Aoc1mOGzTtrjjLKhM5ivsnhoKpQVxKPp+1j1qwg== sha1-8/e6Hi3RFE1b8d5pjQ5fRKRAlYQ="
  },
  "registry": "npm",
  "hash": "f3f7ba1e2dd1144d5bf1de698d0e5f44a4409584"
}